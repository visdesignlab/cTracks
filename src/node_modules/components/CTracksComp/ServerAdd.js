import React from 'react'
import axios from 'axios'

import './ServerAdd.css'

import hamradio from 'hamradio'

import TextInput from './basicComponents/TextInput'
import LabelLayout from './basicComponents/LabelLayout'

class ServerAdd extends React.Component {
  constructor (props) {
    super(props)

    this.state = {
      addName: '',
      addAPI: '',
      error: null
    }
  }

  addServer = () => {
    axios.get(`${this.state.addAPI}/tilesets`)
      .then(response => {
        let tilesetIndex = response.data.results.findIndex(tileset => tileset.datatype === 'chromsizes' && tileset.coordSystem === 'b37')
        if (tilesetIndex === -1) {
          return axios.post(`${this.state.addAPI}/register_url/`, {
            fileurl: 'https://s3.amazonaws.com/pkerp/public/chromSizes.tsv',
            filetype: 'chromsizes-tsv',
            datatype: 'chromsizes',
            coordSystem: "b37",
          })
        }
        return response.data.results[tilesetIndex]
      })
      .then(() => {
        hamradio.publish('server/add', {name: this.state.addName, api: this.state.addAPI})
        this.setState({
          addName: '',
          addAPI: ''
        })
        return this.state.addAPI
      }).catch(error => {
        this.setState({
          error: error.response.data ? error.response.data.error : "Unable to reach API."
        })
        setTimeout(this.setState.bind(this), 5000, {error: null})
      })
  }

	render () {
		return (
      <div>
        <label>Servers</label>
        <ul>
          {this.props.servers.length
            ? this.props.servers.map(server => server.name
              ? <li key={server.api}>{server.name}: {server.api}</li>
              : <li key={server.api}>{server.api}</li>
            )
            : <li>No Servers Registered</li>
          }
        </ul>
        <label>Add Server</label>
        <LabelLayout label="Nickname (optional)"
          inner=<TextInput value={this.state.addName} update={val => this.setState({addName:val})}/>
        />
        <LabelLayout label="Server API address"
          inner=<TextInput value={this.state.addAPI} update={val => this.setState({addAPI:val})}/>
        />
        {this.state.error
          ? <label className="WarningLabel">Failed to add server: {this.state.error}</label>
          : <button className="btn btn-default Button" onClick={this.addServer}>Add Server</button>
        }
      </div>
		)
	}
}


export default ServerAdd;
